{"version":3,"file":"static/js/345.fc7e267b.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/common/Pagination/Pagination.module.css?0156","common/Pagination/Paginator.tsx","webpack://samurai-way/./src/components/Users/Users.module.css?b9d0","components/Users/User.tsx","components/Users/Users.tsx","redux/users-selectors.ts","components/Users/UsersContainer.tsx","hoc/withAuthRedirect.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"selectedPage\":\"Pagination_selectedPage__9laSI\",\"paginationBlock\":\"Pagination_paginationBlock__+aLt3\",\"pagination\":\"Pagination_pagination__w5T1q\",\"pageNumber\":\"Pagination_pageNumber__rlvo0\"};","import styles from \"./Pagination.module.css\"\nimport React from \"react\";\nimport Pagination from '@mui/material/Pagination';\n\ntype PaginationPropsType = {\n    itemsOnPage: number\n    totalItems: number\n    currentPage: number\n    onSetPage: (pageNumber: number) => void\n    portionSize: number\n}\n\nexport const Paginator = (props: PaginationPropsType) => {\n    let pagesWithItems = Math.ceil(props.totalItems / props.itemsOnPage)\n    let pages = []\n    for (let i = 1; i <= pagesWithItems; i++) {\n        pages.push(i)\n    }\n    const setPageHandler = (event: React.ChangeEvent<unknown>, value: number)=> {\n        props.onSetPage(value)\n    }\n\n\n\n    return (\n        <div className={styles.paginationBlock}>\n            <div className={styles.pagination}>\n                <Pagination onChange={setPageHandler} count={pages.length} page={props.currentPage} color=\"primary\" />\n            </div>\n        </div>\n    )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"photo\":\"Users_photo__r-B0M\",\"user\":\"Users_user__ureKU\"};","import React from \"react\"\nimport {NavLink} from \"react-router-dom\";\nimport userPhoto from \"../../assets/images/profile-picture.png\";\nimport styles from \"./Users.module.css\";\nimport {UserType} from \"../../redux/usersReducer\";\n\n\ntype UserPropsType = {\n    user: UserType\n    follow: (userId: number) => void\n    unfollow: (userId: number) => void\n    toggleIsFollowing: (isFetching: boolean, id: number) => void\n    followingInProgress: Array<number>\n}\n\nexport const User = (props: UserPropsType) => {\n    return (\n        <div className={styles.user}>\n            <span>\n                        <div>\n                            <NavLink to={\"/profile/\" + props.user.id}>\n                            <img src={props.user.photos.small !== null ? props.user.photos.small : userPhoto}\n                                 className={styles.photo}\n                                 alt=\"avatar\"/>\n                                </NavLink>\n                        </div>\n                        <div>\n                            {props.user.followed\n                                ?\n                                <button disabled={props.followingInProgress.some(id => id === props.user.id)}\n                                        onClick={() => {\n                                            props.unfollow(props.user.id)\n                                        }}>Unfollow</button>\n                                :\n                                <button disabled={props.followingInProgress.some(id => id === props.user.id)}\n                                        onClick={() => {\n                                            props.follow(props.user.id)\n                                        }}>Follow</button>\n                            }\n                        </div>\n                    </span>\n            <span>\n                        <span>\n                            <div>{props.user.name}</div>\n                            <div>{props.user.status}</div>\n                        </span>\n                         <span>\n                             <div>{\"user.location.country\"}</div>\n                            <div>{\"user.location.city\"}</div>\n                        </span>\n                    </span>\n        </div>\n    )\n}","import React, {ChangeEvent} from \"react\";\nimport {UserType} from \"../../redux/usersReducer\";\nimport {Paginator} from \"../../common/Pagination/Paginator\";\nimport {User} from \"./User\";\n\n\ntype UsersPropsType = {\n    users: UserType[]\n    usersOnPage: number\n    totalUsers: number\n    currentPage: number\n    follow: (userId: number) => void\n    unfollow: (userId: number) => void\n    onSetPage: (pageNumber: number) => void\n    toggleIsFollowing: (isFetching: boolean, id: number) => void\n    followingInProgress: Array<number>\n}\n\n\nexport const Users = (props: UsersPropsType) => {\n\n\n\n    return (\n        <div>\n            <div>\n                <Paginator\n                    totalItems={props.totalUsers}\n                    itemsOnPage={props.usersOnPage}\n                    currentPage={props.currentPage}\n                    onSetPage={props.onSetPage}\n                    portionSize={5}\n                />\n                {/*<Pagination onChange={setPageHandler} count={10} page={props.currentPage} color=\"primary\" />*/}\n            </div>\n            <ul>\n                {props.users.map(u => {\n                    return <div key={u.id}>\n                        <User user={u} follow={props.follow} followingInProgress={props.followingInProgress}\n                              toggleIsFollowing={props.toggleIsFollowing} unfollow={props.unfollow}/>\n                    </div>\n                })\n                }\n            </ul>\n        </div>\n    )\n}\n","import {AppStateType} from \"./reduxStore\";\nimport {UserType} from \"./usersReducer\";\nimport {createSelector} from \"reselect\";\n\nconst getUsersSelector = (state: AppStateType):UserType[]=>{\n    return state.usersPage.users\n}\nexport const getUsers = createSelector(getUsersSelector, (users)=>{\n    return users\n})\n\n\nexport const getTotalUsers = (state: AppStateType):number => {\n    return state.usersPage.totalUsers\n}\n\n\nexport const getCurrentPage = (state:AppStateType):number => {\n    return state.usersPage.currentPage\n}\n\n\nexport const getCount = (state:AppStateType):number => {\n    return state.usersPage.usersOnPage\n}\n\nexport const getIsFetching = (state: AppStateType): boolean=> {\n    return state.usersPage.isFetching\n}\n\nexport const getFollowingInProgress = (state: AppStateType):Array<number> =>{\n    return state.usersPage.followingInProgress\n}","import React, {ComponentType} from \"react\"\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../../redux/reduxStore\";\nimport {folowThunk, requestUsersThunk, toggleIsFetchingAC, unfolowThunk, UserType} from \"../../redux/usersReducer\";\nimport {compose} from \"redux\";\nimport {Users} from \"./Users\";\nimport {Preloader} from \"../../common/preloader/Preloader\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {\n    getCount,\n    getCurrentPage,\n    getFollowingInProgress,\n    getIsFetching,\n    getTotalUsers,\n    getUsers\n} from \"../../redux/users-selectors\";\n\n\ntype MapStateToPropsType = {\n    users: UserType[]\n    totalUsers: number\n    currentPage: number\n    pageSize: number\n    isFetching: boolean\n    followingInProgress: Array<number>\n}\n\ntype MapDispatchToPropsType = {\n    follow: (userId: number) => void\n    unfollow: (userId: number) => void\n    toggleIsFollowing: (isFetching: boolean, id: number) => void\n    getUsers: (currentPage: number, count: number) => void\n}\n\ntype OwnPropsType = {}\n\ntype UsersContainerPropsType = MapStateToPropsType & MapDispatchToPropsType & OwnPropsType\n\n\nclass UsersContainer extends React.Component<UsersContainerPropsType> {\n    componentDidMount() {\n\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\n    }\n\n\n    onSetPage = (pageNumber: number) => {\n        this.props.getUsers(pageNumber, this.props.pageSize)\n    }\n\n\n    render() {\n        return (\n            <>\n                {this.props.isFetching ? <Preloader/> : null}\n                <Users\n                    users={this.props.users}\n                    usersOnPage={this.props.pageSize}\n                    totalUsers={this.props.totalUsers}\n                    currentPage={this.props.currentPage}\n                    follow={this.props.follow}\n                    unfollow={this.props.unfollow}\n                    onSetPage={this.onSetPage}\n                    followingInProgress={this.props.followingInProgress}\n                    toggleIsFollowing={this.props.toggleIsFollowing}\n                />\n            </>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\n    return {\n        users: getUsers(state),\n        totalUsers: getTotalUsers(state),\n        currentPage: getCurrentPage(state),\n        pageSize: getCount(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state)\n    }\n}\n\n\nexport default compose<ComponentType>(connect<MapStateToPropsType, MapDispatchToPropsType, OwnPropsType, AppStateType>(mapStateToProps, {\n    follow: folowThunk,\n    unfollow: unfolowThunk,\n    toggleIsFollowing: toggleIsFetchingAC,\n    getUsers: requestUsersThunk\n}),withAuthRedirect)(UsersContainer)\n","import React, {ComponentType} from \"react\"\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport {AppStateType} from \"../redux/reduxStore\";\nimport {compose} from \"redux\";\n\n\ntype MapStateToPropsType = {\n    isAuth: boolean\n}\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\n\ntype WithAuthRedirectType = {\n    isAuth: boolean\n}\n\n\nexport function withAuthRedirect<P>(Component: ComponentType<P>) {\n    let ContainerComponent = (props: MapStateToPropsType) => {\n        let {isAuth, ...restProps} = props\n        if (!isAuth) return <Redirect to={\"/login\"}/>\n        return <Component {...restProps as P}/>\n    }\n\n\n    let WithAuthRedirectContainer = compose(connect(mapStateToProps))(ContainerComponent)\n    return WithAuthRedirectContainer\n}\n\n"],"names":["Paginator","props","pagesWithItems","Math","ceil","totalItems","itemsOnPage","pages","i","push","className","styles","Pagination","onChange","event","value","onSetPage","count","length","page","currentPage","color","User","to","user","id","src","photos","small","userPhoto","alt","followed","disabled","followingInProgress","some","onClick","unfollow","follow","name","status","Users","totalUsers","usersOnPage","portionSize","users","map","u","toggleIsFollowing","getUsers","createSelector","state","usersPage","getTotalUsers","getCurrentPage","getCount","getIsFetching","isFetching","getFollowingInProgress","UsersContainer","pageNumber","pageSize","this","Preloader","React","compose","connect","folowThunk","unfolowThunk","toggleIsFetchingAC","requestUsersThunk","withAuthRedirect","mapStateToProps","isAuth","auth","Component","restProps"],"sourceRoot":""}