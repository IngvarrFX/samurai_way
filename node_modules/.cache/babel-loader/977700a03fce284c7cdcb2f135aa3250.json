{"ast":null,"code":"var _jsxFileName = \"/Users/ingvarr_fx/Desktop/React/samurai-way/src/components/Dialogs/Dialogs.tsx\";\nimport React from 'react';\nimport style from './Dialogs.module.css';\nimport { DialogItem } from './DialogItem/DialogItem';\nimport { Messages } from './Messages/Messages';\nimport { addMessageActionCreator, updateMessageActionCreator } from '../../redux/state';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Dialogs = props => {\n  let dialogsElement = props.dialogs.map(d => /*#__PURE__*/_jsxDEV(DialogItem, {\n    name: d.name,\n    id: d.id\n  }, d.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 51\n  }, this));\n  let messagesElement = props.messages.map(m => /*#__PURE__*/_jsxDEV(Messages, {\n    message: m.message\n  }, m.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 53\n  }, this));\n  let newMessageElement = /*#__PURE__*/React.createRef();\n\n  let addPostHandler = () => {\n    if (newMessageElement.current) {\n      props.dispatch(addMessageActionCreator());\n    }\n  };\n\n  const onChangeHandler = e => {\n    if (newMessageElement.current) {\n      props.dispatch(updateMessageActionCreator(newMessageElement.current.value));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.dialogs,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.dialogsItem,\n      children: dialogsElement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.messages,\n      children: [messagesElement, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: newMessageElement,\n          onChange: onChangeHandler,\n          value: props.newMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addPostHandler,\n          children: \"Add post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_c = Dialogs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dialogs\");","map":{"version":3,"sources":["/Users/ingvarr_fx/Desktop/React/samurai-way/src/components/Dialogs/Dialogs.tsx"],"names":["React","style","DialogItem","Messages","addMessageActionCreator","updateMessageActionCreator","Dialogs","props","dialogsElement","dialogs","map","d","name","id","messagesElement","messages","m","message","newMessageElement","createRef","addPostHandler","current","dispatch","onChangeHandler","e","value","dialogsItem","newMessage"],"mappings":";AAAA,OAAOA,KAAP,MAA4C,OAA5C;AAEA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,SAAQC,UAAR,QAAyB,yBAAzB;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AACA,SAEIC,uBAFJ,EAGIC,0BAHJ,QAKO,mBALP;;AAyBA,OAAO,MAAMC,OAAO,GAAIC,KAAD,IAA6B;AAEhD,MAAIC,cAAc,GAAGD,KAAK,CAACE,OAAN,CAAcC,GAAd,CAAmBC,CAAD,iBAAO,QAAC,UAAD;AAAuB,IAAA,IAAI,EAAEA,CAAC,CAACC,IAA/B;AAAqC,IAAA,EAAE,EAAED,CAAC,CAACE;AAA3C,KAAiBF,CAAC,CAACE,EAAnB;AAAA;AAAA;AAAA;AAAA,UAAzB,CAArB;AACA,MAAIC,eAAe,GAAGP,KAAK,CAACQ,QAAN,CAAeL,GAAf,CAAoBM,CAAD,iBAAO,QAAC,QAAD;AAAqB,IAAA,OAAO,EAAEA,CAAC,CAACC;AAAhC,KAAeD,CAAC,CAACH,EAAjB;AAAA;AAAA;AAAA;AAAA,UAA1B,CAAtB;AAEA,MAAIK,iBAAiD,gBAAGlB,KAAK,CAACmB,SAAN,EAAxD;;AAEA,MAAIC,cAAc,GAAG,MAAM;AACvB,QAAIF,iBAAiB,CAACG,OAAtB,EAA+B;AAC3Bd,MAAAA,KAAK,CAACe,QAAN,CAAelB,uBAAuB,EAAtC;AACH;AACJ,GAJD;;AAKA,QAAMmB,eAAe,GAAIC,CAAD,IAAyC;AAC7D,QAAIN,iBAAiB,CAACG,OAAtB,EAA+B;AAC3Bd,MAAAA,KAAK,CAACe,QAAN,CAAejB,0BAA0B,CAACa,iBAAiB,CAACG,OAAlB,CAA0BI,KAA3B,CAAzC;AACH;AACJ,GAJD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAExB,KAAK,CAACQ,OAAtB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAER,KAAK,CAACyB,WAAtB;AAAA,gBACKlB;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAEP,KAAK,CAACc,QAAtB;AAAA,iBACKD,eADL,eAEI;AAAA,+BACI;AAAU,UAAA,GAAG,EAAEI,iBAAf;AACU,UAAA,QAAQ,EAAEK,eADpB;AAEU,UAAA,KAAK,EAAEhB,KAAK,CAACoB;AAFvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAQI;AAAA,+BACI;AAAQ,UAAA,OAAO,EAAEP,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CAtCM;KAAMd,O","sourcesContent":["import React, {ChangeEvent, RefObject} from 'react';\nimport {NavLink} from 'react-router-dom';\nimport style from './Dialogs.module.css'\nimport {DialogItem} from './DialogItem/DialogItem';\nimport {Messages} from './Messages/Messages';\nimport {\n    ActionsType,\n    addMessageActionCreator,\n    updateMessageActionCreator,\n    updateNewPostTextActionCreator\n} from '../../redux/state';\n\nexport type DialogNamesType = {\n    id: string\n    name: string\n}\n\nexport type MessagesType = {\n    id: string\n    message: string\n    likesCount: number\n}\n\ntype DialogsPropsType = {\n    newMessage: string\n    dialogs: Array<DialogNamesType>\n    messages: Array<MessagesType>\n    dispatch: (action: ActionsType) => void\n}\n\nexport const Dialogs = (props: DialogsPropsType) => {\n\n    let dialogsElement = props.dialogs.map((d) => <DialogItem key={d.id} name={d.name} id={d.id}/>)\n    let messagesElement = props.messages.map((m) => <Messages key={m.id} message={m.message}/>)\n\n    let newMessageElement: RefObject<HTMLTextAreaElement> = React.createRef()\n\n    let addPostHandler = () => {\n        if (newMessageElement.current) {\n            props.dispatch(addMessageActionCreator())\n        }\n    }\n    const onChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        if (newMessageElement.current) {\n            props.dispatch(updateMessageActionCreator(newMessageElement.current.value))\n        }\n    }\n\n    return (\n        <div className={style.dialogs}>\n            <div className={style.dialogsItem}>\n                {dialogsElement}\n            </div>\n            <div className={style.messages}>\n                {messagesElement}\n                <div>\n                    <textarea ref={newMessageElement}\n                              onChange={onChangeHandler}\n                              value={props.newMessage}\n                    ></textarea>\n                </div>\n                <div>\n                    <button onClick={addPostHandler}>Add post</button>\n                </div>\n            </div>\n\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}