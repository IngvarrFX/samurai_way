{"ast":null,"code":"import { v1 } from 'uuid';\nexport const store = {\n  _state: {\n    profilePage: {\n      postsData: [{\n        id: v1(),\n        message: 'Hello my friend!',\n        likesCount: 22\n      }, {\n        id: v1(),\n        message: 'Hello samurai!',\n        likesCount: 12\n      }, {\n        id: v1(),\n        message: 'You are the best!',\n        likesCount: 24\n      }, {\n        id: v1(),\n        message: 'Good night!',\n        likesCount: 15\n      }],\n      newPostText: 'it-kamasutra.com'\n    },\n    dialogsPage: {\n      dialogsData: [{\n        id: v1(),\n        name: 'Dimych'\n      }, {\n        id: v1(),\n        name: 'Sveta'\n      }, {\n        id: v1(),\n        name: 'Valera'\n      }, {\n        id: v1(),\n        name: 'Victor'\n      }, {\n        id: v1(),\n        name: 'Sasha'\n      }, {\n        id: v1(),\n        name: 'Andrey'\n      }, {\n        id: v1(),\n        name: 'Igor'\n      }]\n    },\n    messagePage: {\n      messagesData: [{\n        id: v1(),\n        message: 'Hello',\n        likesCount: 22\n      }, {\n        id: v1(),\n        message: 'How is your learning?',\n        likesCount: 36\n      }, {\n        id: v1(),\n        message: 'Yo',\n        likesCount: 23\n      }, {\n        id: v1(),\n        message: 'You good!',\n        likesCount: 55\n      }, {\n        id: v1(),\n        message: 'My name is Mike',\n        likesCount: 12\n      }]\n    }\n  },\n\n  updateNewPostText(newText) {\n    this._state.profilePage.newPostText = newText;\n    this.callSubscriber();\n  },\n\n  addPost() {\n    let newPost = {\n      id: v1(),\n      message: this._state.profilePage.newPostText,\n      likesCount: 0\n    };\n\n    this._state.profilePage.postsData.push(newPost);\n\n    this._state.profilePage.newPostText = '';\n    this.callSubscriber();\n  },\n\n  callSubscriber() {\n    console.log('State chenged');\n  },\n\n  subscribe(abserver) {\n    this.callSubscriber = abserver;\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  dispatch(action) {\n    if (action.type === \"ADD-POST\") {\n      let newPost = {\n        id: v1(),\n        message: this._state.profilePage.newPostText,\n        likesCount: 0\n      };\n\n      this._state.profilePage.postsData.push(newPost);\n\n      this._state.profilePage.newPostText = '';\n      this.callSubscriber();\n    } else if (action.type === \"UPDATE-NEW-POST-TEXT\") {\n      this._state.profilePage.newPostText = newText;\n      this.callSubscriber();\n    }\n  }\n\n};","map":{"version":3,"sources":["/Users/ingvarr_fx/Desktop/React/samurai-way/src/redux/state.ts"],"names":["v1","store","_state","profilePage","postsData","id","message","likesCount","newPostText","dialogsPage","dialogsData","name","messagePage","messagesData","updateNewPostText","newText","callSubscriber","addPost","newPost","push","console","log","subscribe","abserver","getState","dispatch","action","type"],"mappings":"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","sourcesContent":["import {v1} from 'uuid';\n\n\nexport type MessageType = {\n    id: string\n    message: string\n    likesCount: number\n}\n\nexport type DialogsType = {\n    id: string\n    name: string\n}\n\nexport type PostDataType = {\n    id: string\n    message: string\n    likesCount: number\n}\n\nexport type MessagePageType = {\n    messagesData: Array<MessageType>\n}\n\nexport type DialogsPageType = {\n    dialogsData: Array<DialogsType>\n}\n\nexport type ProfilePageType = {\n    postsData: Array<PostDataType>\n    newPostText: string\n}\n\nexport type StateType = {\n    profilePage: ProfilePageType\n    dialogsPage: DialogsPageType\n    messagePage: MessagePageType\n}\n\n\nexport type StoreType = {\n    _state: StateType\n    updateNewPostText: (newText: string) => void\n    addPost: () => void\n    callSubscriber: () => void\n    subscribe: (abserver: () => void) => void\n    getState: () => StateType\n    dispatch: (action: {type: string, newText?: string}) => void\n}\n\nexport const store: StoreType = {\n    _state: {\n        profilePage: {\n            postsData: [\n                {id: v1(), message: 'Hello my friend!', likesCount: 22},\n                {id: v1(), message: 'Hello samurai!', likesCount: 12},\n                {id: v1(), message: 'You are the best!', likesCount: 24},\n                {id: v1(), message: 'Good night!', likesCount: 15},\n            ],\n            newPostText: 'it-kamasutra.com'\n        },\n        dialogsPage: {\n            dialogsData: [\n                {id: v1(), name: 'Dimych'},\n                {id: v1(), name: 'Sveta'},\n                {id: v1(), name: 'Valera'},\n                {id: v1(), name: 'Victor'},\n                {id: v1(), name: 'Sasha'},\n                {id: v1(), name: 'Andrey'},\n                {id: v1(), name: 'Igor'},\n            ]\n        },\n        messagePage: {\n            messagesData: [\n                {id: v1(), message: 'Hello', likesCount: 22},\n                {id: v1(), message: 'How is your learning?', likesCount: 36},\n                {id: v1(), message: 'Yo', likesCount: 23},\n                {id: v1(), message: 'You good!', likesCount: 55},\n                {id: v1(), message: 'My name is Mike', likesCount: 12},\n            ]\n        }\n\n    },\n    updateNewPostText(newText: string) {\n        this._state.profilePage.newPostText = newText\n        this.callSubscriber()\n    },\n    addPost() {\n        let newPost: PostDataType = {\n            id: v1(),\n            message: this._state.profilePage.newPostText,\n            likesCount: 0\n        }\n        this._state.profilePage.postsData.push(newPost)\n        this._state.profilePage.newPostText = ''\n        this.callSubscriber()\n    },\n    callSubscriber() {\n        console.log('State chenged')\n    },\n    subscribe(abserver) {\n        this.callSubscriber = abserver\n    },\n    getState() {\n        return this._state\n    },\n\n    dispatch(action){\n        if(action.type === \"ADD-POST\"){\n                let newPost: PostDataType = {\n                    id: v1(),\n                    message: this._state.profilePage.newPostText,\n                    likesCount: 0\n                }\n                this._state.profilePage.postsData.push(newPost)\n                this._state.profilePage.newPostText = ''\n                this.callSubscriber();\n            }else if(action.type === \"UPDATE-NEW-POST-TEXT\"){\n            this._state.profilePage.newPostText = newText\n            this.callSubscriber()\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}